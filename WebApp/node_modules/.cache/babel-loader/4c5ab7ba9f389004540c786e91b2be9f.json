{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\nexport var authStart = function authStart() {\n  console.log(\"aaaaaa\");\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId, role) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n    role: role\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('expiryDate');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('role');\n  localStorage.removeItem('username');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeOut = function checkAuthTimeOut(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime);\n  };\n};\nexport var auth = function auth(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      username: username,\n      password: password\n    };\n    var url = '/auth/login'; // if(!isSignup){\n    ///       url= 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'\n    //     \n    // }\n\n    axios.post(url, authData).then(function (response) {\n      var expiryDate = new Date(response.data.expiryDate);\n      localStorage.setItem('accessToken', response.data.accessToken);\n      localStorage.setItem('expiryDate', expiryDate);\n      localStorage.setItem('userId', response.data.userId);\n      localStorage.setItem('role', response.data.role);\n      localStorage.setItem('username', response.data.username);\n      dispatch(authSuccess(response.data.accessToken, response.data.userId, response.data.role));\n      dispatch(checkAuthTimeOut(response.data.expiryDate - new Date().getTime()));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authStaff = function authStaff(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      username: username,\n      password: password\n    };\n    var url = '/api/auth/login';\n    axios.post(url, authData).then(function (response) {\n      var expiryDate = new Date(response.data.expiryTime);\n      localStorage.setItem('accessToken', response.data.accessToken);\n      localStorage.setItem('expiryDate', expiryDate);\n      localStorage.setItem('userId', response.data.userId);\n      localStorage.setItem('role', response.data.role);\n      localStorage.setItem('username', response.data.username);\n      dispatch(authSuccess(response.data.accessToken, response.data.userId, response.data.role));\n      dispatch(checkAuthTimeOut(response.data.expiryTime - new Date().getTime()));\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('accessToken');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expiryDate = new Date(localStorage.getItem('expiryDate'));\n\n      if (expiryDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        var userId = localStorage.getItem('userId');\n        var role = localStorage.getItem('role');\n        dispatch(authSuccess(token, userId, role));\n        dispatch(checkAuthTimeOut(expiryDate.getTime() - new Date().getTime()));\n      }\n    }\n  };\n};\nexport var changePasswordStart = function changePasswordStart() {\n  return {\n    type: actionTypes.CHANGE_PASSWORD_FAILED\n  };\n};\nexport var changePasswordFailed = function changePasswordFailed(error) {\n  return {\n    type: actionTypes.CHANGE_PASSWORD_FAILED,\n    error: error\n  };\n};\nexport var changePasswordSuccess = function changePasswordSuccess(token, userId) {\n  return {\n    type: actionTypes.CHANGE_PASSWORD_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport var changePassword = function changePassword(id, newPass) {\n  return function (dispatch) {\n    dispatch(changePasswordStart());\n    var changeData = {\n      idToken: id,\n      password: newPass,\n      returnSecureToken: true\n    };\n    var url = 'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'; // if(!isSignup){\n    ///       url= 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'\n    //     \n    // }\n\n    axios.post(url, changeData).then(function (response) {\n      var expiryDate = new Date(new Date().getTime() + response.data.expiryDate * 1000);\n      localStorage.setItem('accessToken', response.data.accessToken);\n      localStorage.setItem('expiryDate', expiryDate);\n      localStorage.setItem('userId', response.data.userId);\n      dispatch(changePasswordSuccess(response.data.accessToken, response.data.userId));\n      dispatch(checkAuthTimeOut(response.data.expiresIn));\n    }).catch(function (err) {\n      dispatch(changePasswordFailed(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["G:/FPT/Capstone/webapp/argon-dashboard-react-master/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","console","log","type","AUTH_START","authSuccess","token","userId","role","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAILED","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeOut","expirationTime","dispatch","setTimeout","auth","username","password","authData","url","post","then","response","expiryDate","Date","data","setItem","accessToken","getTime","catch","err","authStaff","expiryTime","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem","changePasswordStart","CHANGE_PASSWORD_FAILED","changePasswordFailed","changePasswordSuccess","CHANGE_PASSWORD_SUCCESS","changePassword","id","newPass","changeData","returnSecureToken","expiresIn"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios'\r\n\r\n\r\nexport const authStart = ()=>{\r\n    console.log(\"aaaaaa\")\r\n    return{\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, userId,role)=>{\r\n    return{\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n        role:role\r\n    };\r\n}\r\n\r\n\r\nexport const authFail =(error) =>{\r\n    return{\r\n        type: actionTypes.AUTH_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout =()=>{\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('expiryDate')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('role')\r\n    localStorage.removeItem('username')\r\n\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expirationTime) =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(logout())\r\n        },expirationTime)\r\n    }\r\n}\r\n\r\nexport const auth = (username, password) =>{\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData ={\r\n            username:username,\r\n            password:password,\r\n            }\r\n        let url='/auth/login'\r\n        // if(!isSignup){\r\n        ///       url= 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'\r\n        //     \r\n        // }\r\n        axios.post(url,authData)\r\n        .then(response =>{\r\n            const expiryDate= new Date(response.data.expiryDate)\r\n            localStorage.setItem('accessToken',response.data.accessToken)\r\n            localStorage.setItem('expiryDate', expiryDate)\r\n            localStorage.setItem('userId', response.data.userId)\r\n            localStorage.setItem('role', response.data.role)\r\n            localStorage.setItem('username', response.data.username)\r\n            dispatch(authSuccess(response.data.accessToken, response.data.userId, response.data.role))\r\n            dispatch(checkAuthTimeOut(response.data.expiryDate- (new Date().getTime())))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail(err))\r\n        })\r\n    }\r\n}\r\nexport const authStaff = (username, password) =>{\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData ={\r\n            username:username,\r\n            password:password,\r\n            }\r\n        let url='/api/auth/login'\r\n        axios.post(url,authData)\r\n        .then(response =>{\r\n            const expiryDate= new Date(response.data.expiryTime)\r\n            localStorage.setItem('accessToken',response.data.accessToken)\r\n            localStorage.setItem('expiryDate', expiryDate)\r\n            localStorage.setItem('userId', response.data.userId)\r\n            localStorage.setItem('role', response.data.role)\r\n            localStorage.setItem('username', response.data.username)\r\n            dispatch(authSuccess(response.data.accessToken, response.data.userId, response.data.role))\r\n            dispatch(checkAuthTimeOut(response.data.expiryTime- (new Date().getTime())))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}\r\nexport const setAuthRedirectPath = (path) =>{\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = ()=>{\r\n    return dispatch=>{\r\n        const token =localStorage.getItem('accessToken')\r\n        if(!token){\r\n            dispatch(logout())\r\n        }else{\r\n            const expiryDate = new Date(localStorage.getItem('expiryDate'))\r\n            if(expiryDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                const userId = localStorage.getItem('userId')\r\n                const role= localStorage.getItem('role')\r\n                dispatch(authSuccess(token, userId,role))\r\n                dispatch(checkAuthTimeOut(expiryDate.getTime()- (new Date().getTime())))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const changePasswordStart = ()=>{\r\n    return{\r\n        type: actionTypes.CHANGE_PASSWORD_FAILED\r\n    };\r\n}\r\nexport const changePasswordFailed =(error) =>{\r\n    return{\r\n        type: actionTypes.CHANGE_PASSWORD_FAILED,\r\n        error: error\r\n    }\r\n}\r\nexport const changePasswordSuccess = (token, userId)=>{\r\n    return{\r\n        type: actionTypes.CHANGE_PASSWORD_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n}\r\nexport const changePassword = (id, newPass) =>{\r\n    return dispatch => {\r\n        dispatch(changePasswordStart());\r\n        const changeData ={\r\n            idToken:id,\r\n            password:newPass,\r\n            returnSecureToken :true\r\n        }\r\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'\r\n        // if(!isSignup){\r\n        ///       url= 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlIksbOmIbctM2LrIvzxQJznoKcyIUEJI'\r\n        //     \r\n        // }\r\n        axios.post(url,changeData)\r\n        .then(response =>{\r\n            const expiryDate= new Date(new Date().getTime() + response.data.expiryDate*1000)\r\n            localStorage.setItem('accessToken',response.data.accessToken)\r\n            localStorage.setItem('expiryDate', expiryDate)\r\n            localStorage.setItem('userId', response.data.userId)\r\n            dispatch(changePasswordSuccess(response.data.accessToken, response.data.userId))\r\n            dispatch(checkAuthTimeOut(response.data.expiresIn))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(changePasswordFailed(err.response.data.error))\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
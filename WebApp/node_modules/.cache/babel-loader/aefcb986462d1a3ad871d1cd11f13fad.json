{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../ultility';\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess(state, action) {\n  console.log(\"aaaaaa\");\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n    role: action.role\n  });\n};\n\nvar authFail = function authFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar authLogout = function authLogout(state, action) {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    role: null,\n    user: null\n  });\n};\n\nvar changePasswordStart = function changePasswordStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar changePasswordSuccess = function changePasswordSuccess(state, action) {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nvar changePasswordFail = function changePasswordFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar setRedirectPath = function setRedirectPath(state, action) {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    username: null,\n    role: null,\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAILED:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.CHANGE_PASSWORD_START:\n      return changePasswordStart(state, action);\n\n    case actionTypes.CHANGE_PASSWORD_FAILED:\n      return changePasswordFail(state, action);\n\n    case actionTypes.CHANGE_PASSWORD_SUCCESS:\n      return changePasswordSuccess(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setRedirectPath(state, action);\n  }\n\n  return state;\n}","map":{"version":3,"sources":["G:/FPT/Capstone/webapp/argon-dashboard-react-master/src/store/reducers/Auth.js"],"names":["actionTypes","updateObject","authStart","state","action","error","loading","authSuccess","console","log","token","idToken","userId","role","authFail","authLogout","user","changePasswordStart","changePasswordSuccess","changePasswordFail","setRedirectPath","authRedirectPath","path","reducer","username","type","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","CHANGE_PASSWORD_START","CHANGE_PASSWORD_FAILED","CHANGE_PASSWORD_SUCCESS","SET_AUTH_REDIRECT_PATH"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../ultility'\n\n\nconst authStart = (state, action) =>{\n  return updateObject(state,{error:null, loading:true})\n}\nconst authSuccess = (state, action)=>{\n  console.log(\"aaaaaa\")\n  return updateObject(state,{\n      token: action.idToken,\n      userId: action.userId,\n      error:null,\n      loading:false,\n      role:action.role\n  })\n}\n\n\nconst authFail = (state, action) =>{\n  return updateObject(state,{\n      error:action.error,\n      loading:false\n  })\n}\n\nconst authLogout = (state, action) =>{\n  return updateObject( state, {\n      token:null,\n      userId:null,\n      role:null,\n      user:null\n  })\n}\n\nconst changePasswordStart = (state, action) =>{\n  return updateObject(state,{error:null, loading:true})\n}\nconst changePasswordSuccess = (state, action)=>{\n  return updateObject(state,{\n      token: action.idToken,\n      userId: action.userId,\n      error:null,\n      loading:false\n  })\n}\nconst changePasswordFail = (state, action) =>{\n  return updateObject(state,{\n      error:action.error,\n      loading:false\n  })\n}\n\nconst setRedirectPath = (state,action) =>{\n  return updateObject(state, {authRedirectPath: action.path})\n}\n\n\nexport default function reducer(state = {\n  username:null,\n  role:null,\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n}, action) {\n  switch(action.type){\n    case actionTypes.AUTH_START: return authStart(state, action)\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n    case actionTypes.AUTH_FAILED: return authFail(state, action)\n    case actionTypes.AUTH_LOGOUT: return authLogout(state,action)\n    case actionTypes.CHANGE_PASSWORD_START: return changePasswordStart(state, action)\n    case actionTypes.CHANGE_PASSWORD_FAILED: return changePasswordFail(state, action)\n    case actionTypes.CHANGE_PASSWORD_SUCCESS: return changePasswordSuccess(state,action)\n    case actionTypes.SET_AUTH_REDIRECT_PATH: return setRedirectPath(state,action)\n   \n}\nreturn state\n}"]},"metadata":{},"sourceType":"module"}